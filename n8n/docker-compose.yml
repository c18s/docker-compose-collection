x-shared: &shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
    - N8N_HOST=${N8N_HOST:-localhost}
    - N8N_PORT=${N8N_PORT:-5678}
    - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
    - N8N_RUNNERS_ENABLED=true
    - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
    - N8N_SKIP_LICENSE_WARNING=true
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    - WEBHOOK_URL=${WEBHOOK_URL:-}
    - TZ=${GENERIC_TIMEZONE:-Asia/Bangkok}
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Asia/Bangkok}
  volumes:
    - ./data/n8n:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

services:
  postgres:
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
      - TZ=${GENERIC_TIMEZONE:-Asia/Bangkok}
      - PGTZ=${GENERIC_TIMEZONE:-Asia/Bangkok}
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      - ./script/postgresql-init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U $POSTGRES_USER -d $POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:8
    restart: always
    environment:
      - TZ=${GENERIC_TIMEZONE:-Asia/Bangkok}
    volumes:
      - ./data/redis:/data
    ports:
      - 127.0.0.1:6379:6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  caddy:
    image: caddy:latest
    restart: always
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=${N8N_PORT:-5678}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/caddy:/data
      - ./config/caddy:/etc/caddy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  n8n:
    <<: *shared
    ports:
      - 127.0.0.1:5678:5678

  n8n-worker:
    <<: *shared
    command: worker
    depends_on:
      - n8n
